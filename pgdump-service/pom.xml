<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>dump</artifactId>
        <groupId>ru.cbr.turing.dump</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.cbr.turing.dump.postgres</groupId>
    <artifactId>pgdump-service</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <docker.image.prefix>${ppop.project.name}</docker.image.prefix>
        <docker.image.name>${docker.image.prefix}/${project.artifactId}:latest</docker.image.name>
        <docker.container.name>${project.artifactId}</docker.container.name>
        <docker.external.port>8050</docker.external.port>
        <docker.internal.port>8080</docker.internal.port>
    </properties>

    <profiles>
        <profile>
            <id>local-dev</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>local-dev</value>
                </property>
            </activation>
            <properties>
                <project.version>${project.version}-local-dev</project.version>
                <activatedProperties>local-dev</activatedProperties>
            </properties>
        </profile>
        <profile>
            <id>local-docker</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>local-docker</value>
                </property>
            </activation>
            <properties>
                <project.version>${project.version}-local-docker</project.version>
                <activatedProperties>local-docker</activatedProperties>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ru.cbr.turing.dump.pgdump</groupId>
            <artifactId>pgdump-lib</artifactId>
        </dependency>
        <dependency>
            <groupId>ru.cbr.turing.dump.infodiod.client</groupId>
            <artifactId>infodiod-client</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.yml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <executions>
                    <execution>
                        <id>show-profiles</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>active-profiles</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repository>${docker.image.prefix}/${project.artifactId}</repository>
                    <buildArgs>
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <executions>
                    <execution>
                        <id>clean-docker</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>clean_docker</executable>
                            <arguments>
                                <argument>${docker.image.name}</argument>
                                <argument>${docker.container.name}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>run-docker</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>run_docker</executable>
                            <arguments>
                                <argument>${docker.image.name}</argument>
                                <argument>${docker.container.name}</argument>
                                <argument>${docker.external.port}</argument>
                                <argument>${docker.internal.port}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>



</project>